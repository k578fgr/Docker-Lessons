Storing Container Data in Google Cloud Storage

Log in to the server using the credentials provided:

ssh cloud_user@<PUBLIC_IP_ADDRESS>
Note: You may continue as cloud_user for the duration of the lab. You do not need to elevate to root user privileges to follow this lab guide.

Configuration and Installation
Export the projnum variable:
export projnum=$(curl http://metadata.google.internal/computeMetadata/v1/project/numeric-project-id -sH "Metadata-Flavor: Google")
Verify that the variable was set successfully:
echo $projnum
Export the BUCKET variable:
export BUCKET="widgetfactory-${projnum}"
Prepare the Cloud Storage Bucket
Using gsutil, create a new bucket:
gsutil mb -l us-central1 -c standard gs://$BUCKET
Verify that the gcsfuse repo is available on the server:
cat /etc/yum.repos.d/gcsfuse.repo
Install gcsfuse (Note: please wait a few minutes before continuing to allow the lab's startup scripts to release the yum lock).
sudo yum install -y gcsfuse
Update the fuse.conf file to allow the user to mount the bucket properly:
sudo sed -ri 's/# user_allow_other/user_allow_other/' /etc/fuse.conf
Configure the directories needed to mount the bucket:
sudo mkdir /mnt/widget-factory /tmp/gcs
Change ownership of the directories to the cloud_user:
sudo chown cloud_user: /mnt/widget-factory/ /tmp/gcs
Mount the bucket:
gcsfuse -o allow_other --temp-dir=/tmp/gcs $BUCKET /mnt/widget-factory/
Copy the website files into the bucket:
cp -r /home/cloud_user/widget-factory-inc/web/* /mnt/widget-factory/
List the contents of the bucket:
gsutil ls gs://$BUCKET
Use the GCS Bucket in a Container
Mount the directory into the Docker container:
sudo docker run -d --name web1 --mount type=bind,source=/mnt/widget-factory,target=/usr/local/apache2/htdocs,readonly -p 80:80 httpd:2.4
Using a web browser, verify connectivity to the container:
<SERVER_PUBLIC_IP_ADDRESS>